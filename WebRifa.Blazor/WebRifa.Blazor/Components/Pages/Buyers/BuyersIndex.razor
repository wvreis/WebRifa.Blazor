@page "/buyers"
@page "/buyers/{CurrentPage:int}"
@attribute [StreamRendering]
@attribute [Authorize]
@using WebRifa.Blazor.BlazorServices
@using WebRifa.Blazor.Core.Dtos
@using WebRifa.Blazor.Core.Requests.Queries.Buyer
@inject IBuyerBlazorService _buyerService

<PageTitle>Compradores</PageTitle>

<h3>Compradores</h3>

<div>
    <a class="btn btn-primary" href="./buyer">Novo Cadastro</a>
</div>

@if (Buyers is null) {
    <Loading />    
}
else if (!Buyers.Items!.Any()) {
    <p>Não há Compradores Cadastrados</p>
}
else {
    <div class="table-responsive">
        <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Telefone</th>
                <th>E-mail</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var buyer in Buyers.Items) {
                <tr>
                    <td>@buyer.Name</td>
                    <td>@buyer.PhoneNumber</td>
                    <td>@buyer.Email</td>
                    <td>
                        <a class="btn btn-info" href="@GetEditLink(buyer)">Editar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>

    <Pagination CurrentPage="CurrentPage" 
            TotalPages="Buyers.TotalPages"
            NavigationLink="./buyers"/>
}

@code {
    [Parameter]
    public int CurrentPage { get; set; }

    public PaginatedList<BuyerDto>? Buyers { get; set; }
    BuyerSearchQuery Query { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Query.CurrentPage = CurrentPage;
        Buyers = await _buyerService.GetSearchBuyersAsync(Query);
    }

    public string GetEditLink(BuyerDto buyerDto) => 
        $"/buyer/{buyerDto.Id}";
}
